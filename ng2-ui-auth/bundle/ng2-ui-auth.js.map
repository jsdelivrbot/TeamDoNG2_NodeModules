{"version":3,"file":null,"sources":["../src/config.service.ts","../src/storage.service.ts","../src/shared.service.ts","../src/jwt-http.service.ts","../src/utils.ts","../src/popup.service.ts","../src/oauth1.service.ts","../src/oauth2.service.ts","../src/oauth.service.ts","../src/local.service.ts","../src/auth.service.ts","../src/ng2-ui-auth.module.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Response} from '@angular/http';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\nexport interface IPopupOptions {\r\n    width?: number;\r\n    height?: number;\r\n    left?: number;\r\n    top?: number;\r\n}\r\n\r\nexport interface IOauth1Options {\r\n    url?: string;\r\n    name?: string;\r\n    popupOptions?: IPopupOptions;\r\n    redirectUri?: string;\r\n    authorizationEndpoint?: string;\r\n    oauthType?: string;\r\n    exchangeForToken?: boolean | ((options: {code?: string, state?: string}, userData?: any) => Observable<Response>);\r\n}\r\n\r\nexport interface IOauth2Options extends IOauth1Options {\r\n    state?: string| (() => string);\r\n    defaultUrlParams?: string[];\r\n    responseType?: string;\r\n    responseParams?: {\r\n        code?: string;\r\n        clientId?: string;\r\n        redirectUri?: string;\r\n    };\r\n    clientId?: string;\r\n    scopeDelimiter?: string;\r\n    scopePrefix?: string;\r\n\r\n    requiredUrlParams?: string[];\r\n    optionalUrlParams?: string[];\r\n    scope?: string[]|string;\r\n    display?: string;\r\n}\r\n\r\nexport interface IProviders {\r\n    [provider: string]: IOauth2Options;\r\n}\r\n\r\nexport abstract class CustomConfig {\r\n    tokenRoot: string;\r\n    cordova: boolean;\r\n    baseUrl: string;\r\n    loginUrl: string;\r\n    signupUrl: string;\r\n    unlinkUrl: string;\r\n    tokenName: string;\r\n    tokenSeparator: string;\r\n    tokenPrefix: string;\r\n    authToken: string;\r\n    authHeader: string;\r\n    storageType: string;\r\n    providers: IProviders;\r\n    defaultHeaders: { [name: string]: string };\r\n    withCredentials: boolean;\r\n    autoRefreshToken: boolean;\r\n    refreshUrl: string;\r\n    resolveToken: (response: Response) => string;\r\n}\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n    constructor(config?: CustomConfig) {\r\n        Object.keys(config).forEach((key) => {\r\n            if (typeof config[key] === \"undefined\") {\r\n                return;\r\n            }\r\n            if (key !== 'providers') {\r\n                this[key] = config[key];\r\n            } else {\r\n                Object.keys(config[key]).forEach((provider) => {\r\n                    if (typeof this.providers[provider] === 'undefined') {\r\n                        this.providers[provider] = config.providers[provider];\r\n                    } else {\r\n                        Object.keys(config.providers[provider]).forEach((prop) => {\r\n                            this.providers[provider][prop] = config.providers[provider][prop];\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    withCredentials = false;\r\n    tokenRoot = null;\r\n    baseUrl = '/';\r\n    loginUrl = '/auth/login';\r\n    signupUrl = '/auth/signup';\r\n    unlinkUrl = '/auth/unlink/';\r\n    refreshUrl = '/auth/refresh';\r\n    tokenName = 'token';\r\n    tokenSeparator = '_';\r\n    tokenPrefix = 'ng2-ui-auth';\r\n    authHeader = 'Authorization';\r\n    authToken = 'Bearer';\r\n    storageType = 'localStorage';\r\n    defaultHeaders = null;\r\n    autoRefreshToken = false;\r\n    cordova = !!window['cordova'];\r\n    resolveToken = (response: Response) => {\r\n        const accessToken: string | Object | null | undefined = response && response.json() &&\r\n            (response.json().access_token || response.json().token || response.json().data);\r\n        if (!accessToken) {\r\n            console.warn('No token found');\r\n            return null;\r\n        }\r\n        if (typeof accessToken === 'string') {\r\n            return accessToken;\r\n        }\r\n        if (typeof accessToken !== 'object') {\r\n            console.warn('No token found');\r\n            return null;\r\n        }\r\n        const tokenRootData = this.tokenRoot &&\r\n            this.tokenRoot.split('.').reduce(\r\n                (o, x) => {\r\n                    return o[x];\r\n                },\r\n                accessToken);\r\n        const token = tokenRootData ? tokenRootData[this.tokenName] : accessToken[this.tokenName];\r\n        if (token) {\r\n            return token;\r\n        }\r\n        let tokenPath = this.tokenRoot ? this.tokenRoot + '.' + this.tokenName : this.tokenName;\r\n        console.warn('Expecting a token named \"' + tokenPath);\r\n        return null;\r\n    };\r\n    providers: IProviders = {\r\n        facebook: {\r\n            name: 'facebook',\r\n            url: '/auth/facebook',\r\n            authorizationEndpoint: 'https://www.facebook.com/v2.5/dialog/oauth',\r\n            redirectUri: window.location.origin + '/',\r\n            requiredUrlParams: ['display', 'scope'],\r\n            scope: ['email'],\r\n            scopeDelimiter: ',',\r\n            display: 'popup',\r\n            oauthType: '2.0',\r\n            popupOptions: {width: 580, height: 400}\r\n        },\r\n        google: {\r\n            name: 'google',\r\n            url: '/auth/google',\r\n            authorizationEndpoint: 'https://accounts.google.com/o/oauth2/auth',\r\n            redirectUri: window.location.origin,\r\n            requiredUrlParams: ['scope'],\r\n            optionalUrlParams: ['display', 'state'],\r\n            scope: ['profile', 'email'],\r\n            scopePrefix: 'openid',\r\n            scopeDelimiter: ' ',\r\n            display: 'popup',\r\n            oauthType: '2.0',\r\n            popupOptions: {width: 452, height: 633},\r\n            state: () => encodeURIComponent(Math.random().toString(36).substr(2)),\r\n        },\r\n        github: {\r\n            name: 'github',\r\n            url: '/auth/github',\r\n            authorizationEndpoint: 'https://github.com/login/oauth/authorize',\r\n            redirectUri: window.location.origin,\r\n            optionalUrlParams: ['scope'],\r\n            scope: ['user:email'],\r\n            scopeDelimiter: ' ',\r\n            oauthType: '2.0',\r\n            popupOptions: {width: 1020, height: 618}\r\n        },\r\n        instagram: {\r\n            name: 'instagram',\r\n            url: '/auth/instagram',\r\n            authorizationEndpoint: 'https://api.instagram.com/oauth/authorize',\r\n            redirectUri: window.location.origin,\r\n            requiredUrlParams: ['scope'],\r\n            scope: ['basic'],\r\n            scopeDelimiter: '+',\r\n            oauthType: '2.0'\r\n        },\r\n        linkedin: {\r\n            name: 'linkedin',\r\n            url: '/auth/linkedin',\r\n            authorizationEndpoint: 'https://www.linkedin.com/uas/oauth2/authorization',\r\n            redirectUri: window.location.origin,\r\n            requiredUrlParams: ['state'],\r\n            scope: ['r_emailaddress'],\r\n            scopeDelimiter: ' ',\r\n            state: 'STATE',\r\n            oauthType: '2.0',\r\n            popupOptions: {width: 527, height: 582}\r\n        },\r\n        twitter: {\r\n            name: 'twitter',\r\n            url: '/auth/twitter',\r\n            authorizationEndpoint: 'https://api.twitter.com/oauth/authenticate',\r\n            redirectUri: window.location.origin,\r\n            oauthType: '1.0',\r\n            popupOptions: {width: 495, height: 645}\r\n        },\r\n        twitch: {\r\n            name: 'twitch',\r\n            url: '/auth/twitch',\r\n            authorizationEndpoint: 'https://api.twitch.tv/kraken/oauth2/authorize',\r\n            redirectUri: window.location.origin,\r\n            requiredUrlParams: ['scope'],\r\n            scope: ['user_read'],\r\n            scopeDelimiter: ' ',\r\n            display: 'popup',\r\n            oauthType: '2.0',\r\n            popupOptions: {width: 500, height: 560}\r\n        },\r\n        live: {\r\n            name: 'live',\r\n            url: '/auth/live',\r\n            authorizationEndpoint: 'https://login.live.com/oauth20_authorize.srf',\r\n            redirectUri: window.location.origin,\r\n            requiredUrlParams: ['display', 'scope'],\r\n            scope: ['wl.emails'],\r\n            scopeDelimiter: ' ',\r\n            display: 'popup',\r\n            oauthType: '2.0',\r\n            popupOptions: {width: 500, height: 560}\r\n        },\r\n        yahoo: {\r\n            name: 'yahoo',\r\n            url: '/auth/yahoo',\r\n            authorizationEndpoint: 'https://api.login.yahoo.com/oauth2/request_auth',\r\n            redirectUri: window.location.origin,\r\n            scope: [],\r\n            scopeDelimiter: ',',\r\n            oauthType: '2.0',\r\n            popupOptions: {width: 559, height: 519}\r\n        },\r\n        bitbucket: {\r\n            name: 'bitbucket',\r\n            url: '/auth/bitbucket',\r\n            authorizationEndpoint: 'https://bitbucket.org/site/oauth2/authorize',\r\n            redirectUri: window.location.origin + '/',\r\n            requiredUrlParams: ['scope'],\r\n            scope: ['email'],\r\n            scopeDelimiter: ',',\r\n            oauthType: '2.0',\r\n            popupOptions: {width: 1028, height: 529}\r\n        },\r\n        spotify: {\r\n            name: 'spotify',\r\n            url: '/auth/spotify',\r\n            authorizationEndpoint: 'https://accounts.spotify.com/authorize',\r\n            redirectUri: window.location.origin,\r\n            optionalUrlParams: ['state'],\r\n            requiredUrlParams: ['scope'],\r\n            scope: ['user-read-email'],\r\n            scopePrefix: '',\r\n            scopeDelimiter: ',',\r\n            oauthType: '2.0',\r\n            popupOptions: { width: 500, height: 530 },\r\n            state: () => encodeURIComponent(Math.random().toString(36).substr(2))\r\n        }\r\n    };\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ConfigService} from './config.service';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n@Injectable()\r\nexport class StorageService {\r\n    private store = {};\r\n    private isStorageAvailable: boolean;\r\n    constructor(private config: ConfigService) {\r\n        this.isStorageAvailable = (() => {\r\n            try {\r\n                let supported = config.storageType in window && window[config.storageType] !== null;\r\n\r\n                if (supported) {\r\n                    let key = Math.random().toString(36).substring(7);\r\n                    (<any>window[this.config.storageType]).setItem(key, '');\r\n                    (<any>window[this.config.storageType]).removeItem(key);\r\n                }\r\n\r\n                return supported;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        })();\r\n        if (!this.isStorageAvailable) {\r\n            console.warn(config.storageType + ' is not available.');\r\n        }\r\n    }\r\n    get(key: string) {\r\n        return this.isStorageAvailable ? window[this.config.storageType].getItem(key) : this.store[key];\r\n    }\r\n    set(key: string, value: string) {\r\n        return this.isStorageAvailable ? window[this.config.storageType].setItem(key, value) : this.store[key] = value;\r\n    }\r\n    remove(key: string) {\r\n        return this.isStorageAvailable ? window[this.config.storageType].removeItem(key) : delete this.store[key];\r\n    }\r\n}\r\n","/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subscriber} from 'rxjs/Subscriber';\r\nimport {Injectable} from '@angular/core';\r\nimport {Response} from '@angular/http';\r\nimport {ConfigService} from './config.service';\r\nimport {StorageService} from './storage.service';\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n@Injectable()\r\nexport class SharedService {\r\n    tokenName = this.config.tokenPrefix ? [this.config.tokenPrefix, this.config.tokenName].join(this.config.tokenSeparator) : this.config.tokenName;\r\n    constructor(private storage: StorageService, private config: ConfigService) {}\r\n    getToken() {\r\n        return this.storage.get(this.tokenName);\r\n    }\r\n    getPayload() {\r\n        let token = this.getToken();\r\n\r\n        if (token && token.split('.').length === 3) {\r\n            try {\r\n                let base64Url = token.split('.')[1];\r\n                let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n                return JSON.parse(decodeURIComponent(encodeURIComponent(window.atob(base64))));\r\n            } catch (e) {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    setToken(response: string | Response) {\r\n        if (!response) {\r\n            console.warn('Can\\'t set token without passing a value');\r\n            return;\r\n        }\r\n\r\n        let token: string;\r\n        if (typeof response === 'string') {\r\n            token = response;\r\n        } else {\r\n            token = this.config.resolveToken(response)\r\n        }\r\n\r\n        if (token) {\r\n            this.storage.set(this.tokenName, token);\r\n        }\r\n    }\r\n    removeToken() {\r\n        this.storage.remove(this.tokenName);\r\n    }\r\n    isAuthenticated() {\r\n        let token = this.getToken();\r\n\r\n        // a token is present\r\n        if (token) {\r\n            // token with a valid JWT format XXX.YYY.ZZZ\r\n            if (token.split('.').length === 3) {\r\n                // could be a valid JWT or an access token with the same format\r\n                try {\r\n                    let base64Url = token.split('.')[1];\r\n                    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n                    let exp = JSON.parse(window.atob(base64)).exp;\r\n                    // jwt with an optional expiration claims\r\n                    if (exp) {\r\n                        let isExpired = Math.round(new Date().getTime() / 1000) >= exp;\r\n                        if (isExpired) {\r\n                            // fail: Expired token\r\n                            this.storage.remove(this.tokenName);\r\n                            return false;\r\n                        } else {\r\n                            // pass: Non-expired token\r\n                            return true;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    // pass: Non-JWT token that looks like JWT\r\n                    return true;\r\n                }\r\n            }\r\n            // pass: All other tokens\r\n            return true;\r\n        }\r\n        // lail: No token at all\r\n        return false;\r\n    }\r\n    getExpirationDate() {\r\n        let payload = this.getPayload();\r\n        if (payload && payload.exp && Math.round(new Date().getTime() / 1000) < payload.exp) {\r\n            let date = new Date(0);\r\n            date.setUTCSeconds(payload.exp);\r\n            return date;\r\n        }\r\n        return null;\r\n    }\r\n    logout(): Observable<any> {\r\n        this.storage.remove(this.tokenName);\r\n        return Observable.create((observer: Subscriber<any>) => {\r\n            observer.next();\r\n            observer.complete();\r\n        });\r\n    }\r\n    setStorageType(type) {\r\n        this.config.storageType = type;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Http, RequestMethod, Response, RequestOptionsArgs, Headers, Request, RequestOptions, ConnectionBackend} from '@angular/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport {ConfigService} from './config.service';\r\nimport {SharedService} from './shared.service';\r\n/**\r\n * Created by Ron on 06/01/2016.\r\n */\r\n\r\nexport interface JwtRequestOptionsArgs extends RequestOptionsArgs {\r\n    autoRefreshToken?: boolean\r\n}\r\n\r\n@Injectable()\r\nexport class JwtHttp extends Http {\r\n    constructor(_backend: ConnectionBackend,\r\n                _defaultOptions: RequestOptions,\r\n                private _shared: SharedService,\r\n                private _config: ConfigService) {\r\n        super(_backend, _defaultOptions);\r\n    }\r\n\r\n    request(url: string | Request, options?: JwtRequestOptionsArgs): Observable<Response> {\r\n        //if the token is expired the \"getExpirationDate\" function returns null\r\n        if (this._shared.getToken() && !this._shared.getExpirationDate() &&\r\n            options.autoRefreshToken ||\r\n            typeof options.autoRefreshToken === 'undefined' && this._config.autoRefreshToken) {\r\n            return this.refreshToken()\r\n                .switchMap(() => this.actualRequest(url, options));\r\n        }\r\n        return this.actualRequest(url, options);\r\n    }\r\n\r\n    get(url: string, options?: JwtRequestOptionsArgs): Observable<Response> {\r\n        options = options || {};\r\n        options.method = RequestMethod.Get;\r\n        return this.request(url, options);\r\n    }\r\n\r\n    post(url: string, body: any, options?: JwtRequestOptionsArgs): Observable<Response> {\r\n        options = options || {};\r\n        options.method = RequestMethod.Post;\r\n        options.body = body;\r\n        return this.request(url, options);\r\n    }\r\n\r\n    put(url: string, body: any, options?: JwtRequestOptionsArgs): Observable<Response> {\r\n        options = options || {};\r\n        options.method = RequestMethod.Put;\r\n        options.body = body;\r\n        return this.request(url, options);\r\n    }\r\n\r\n    delete(url: string, options?: JwtRequestOptionsArgs): Observable<Response> {\r\n        options = options || {};\r\n        options.method = RequestMethod.Delete;\r\n        return this.request(url, options);\r\n    }\r\n\r\n    patch(url: string, body: any, options?: JwtRequestOptionsArgs): Observable<Response> {\r\n        options = options || {};\r\n        options.method = RequestMethod.Patch;\r\n        options.body = body;\r\n        return this.request(url, options);\r\n    }\r\n\r\n    head(url: string, options?: JwtRequestOptionsArgs): Observable<Response> {\r\n        options = options || {};\r\n        options.method = RequestMethod.Head;\r\n        return this.request(url, options);\r\n    }\r\n\r\n\r\n    refreshToken(): Observable<Response> {\r\n        const authHeader = new Headers();\r\n        authHeader.append(this._config.authHeader, (this._config.authToken + ' ' + this._shared.getToken()));\r\n        return super\r\n            .get(this._config.refreshUrl, {\r\n                headers: authHeader\r\n            })\r\n            .do((res: Response) => this._shared.setToken(res));\r\n    }\r\n\r\n    private actualRequest(url: string | Request, options?: JwtRequestOptionsArgs) {\r\n        if (url instanceof Request) {\r\n            url.headers = url.headers || new Headers();\r\n            this.setHeaders(url);\r\n        } else {\r\n            options = options || {};\r\n            this.setHeaders(options);\r\n        }\r\n        return super.request(url, options);\r\n    }\r\n\r\n    private setHeaders(obj: { headers?: Headers, [index: string]: any }) {\r\n        obj.headers = obj.headers || new Headers();\r\n        if (this._config.defaultHeaders) {\r\n            Object.keys(this._config.defaultHeaders).forEach((defaultHeader) => {\r\n                if (!obj.headers.has(defaultHeader)) {\r\n                    obj.headers.set(defaultHeader, this._config.defaultHeaders[defaultHeader]);\r\n                }\r\n            });\r\n        }\r\n        if (this._shared.isAuthenticated()) {\r\n            obj.headers.set(this._config.authHeader, this._config.authToken + ' ' + this._shared.getToken());\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\nexport function assign(target: any, ...src: any[]): any {\r\n    if (target == null) {\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n    }\r\n\r\n    target = Object(target);\r\n    for (var index = 1; index < arguments.length; index++) {\r\n        var source = arguments[index];\r\n        if (source != null) {\r\n            for (var key in source) {\r\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n                    target[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function joinUrl(baseUrl: string, url: string) {\r\n    if (/^(?:[a-z]+:)?\\/\\//i.test(url)) {\r\n        return url;\r\n    }\r\n\r\n    let joined = [baseUrl, url].join('/');\r\n\r\n    let normalize = function(str) {\r\n        return str\r\n            .replace(/[\\/]+/g, '/')\r\n            .replace(/\\/\\?/g, '?')\r\n            .replace(/\\/\\#/g, '#')\r\n            .replace(/\\:\\//g, '://');\r\n    };\r\n\r\n    return normalize(joined);\r\n}\r\n\r\nexport function merge(obj1, obj2) {\r\n    let result = {};\r\n    for (var i in obj1) {\r\n        if (obj1.hasOwnProperty(i)) {\r\n            if ((i in obj2) && (typeof obj1[i] === 'object') && (i !== null)) {\r\n                result[i] = merge(obj1[i], obj2[i]);\r\n            } else {\r\n                result[i] = obj1[i];\r\n            }\r\n        }\r\n    }\r\n    for (i in obj2) {\r\n        if (obj2.hasOwnProperty(i)) {\r\n            if (i in result) {\r\n                continue;\r\n            }\r\n            result[i] = obj2[i];\r\n        }\r\n\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function camelCase(name) {\r\n    return name.replace(/([\\:\\-\\_]+(.))/g, function(_, separator, letter, offset) {\r\n        return offset ? letter.toUpperCase() : letter;\r\n    });\r\n}","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {assign} from './utils';\r\nimport {ConfigService, IPopupOptions} from './config.service';\r\nimport 'rxjs/add/observable/interval';\r\nimport 'rxjs/add/observable/fromEvent';\r\nimport 'rxjs/add/observable/empty';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/take';\r\nimport 'rxjs/add/operator/takeWhile';\r\n\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n@Injectable()\r\nexport class PopupService {\r\n    url = '';\r\n    popupWindow: Window = null;\r\n\r\n    private static prepareOptions(options: IPopupOptions) {\r\n        options = options || {};\r\n        let width = options.width || 500;\r\n        let height = options.height || 500;\r\n        return assign(\r\n            {\r\n                width: width,\r\n                height: height,\r\n                left: window.screenX + ((window.outerWidth - width) / 2),\r\n                top: window.screenY + ((window.outerHeight - height) / 2.5)\r\n            },\r\n            options);\r\n    }\r\n\r\n    private static stringifyOptions(options: Object) {\r\n        return Object.keys(options).map((key) => {\r\n            return key + '=' + options[key];\r\n        }).join(',');\r\n    }\r\n\r\n    private static parseQueryString(joinedKeyValue: string): any {\r\n        let key, value;\r\n        return joinedKeyValue.split('&').reduce(\r\n            (obj, keyValue) => {\r\n                if (keyValue) {\r\n                    value = keyValue.split('=');\r\n                    key = decodeURIComponent(value[0]);\r\n                    obj[key] = typeof value[1] !== 'undefined' ? decodeURIComponent(value[1]) : true;\r\n                }\r\n                return obj;\r\n            },\r\n            {});\r\n    }\r\n\r\n\r\n    constructor(private config: ConfigService) {}\r\n    open(url: string, name: string, options: IPopupOptions) {\r\n        this.url = url;\r\n\r\n        let stringifiedOptions = PopupService.stringifyOptions(PopupService.prepareOptions(options));\r\n        let UA = window.navigator.userAgent;\r\n        let windowName = (this.config.cordova || UA.indexOf('CriOS') > -1) ? '_blank' : name;\r\n\r\n        this.popupWindow = window.open(url, windowName, stringifiedOptions);\r\n\r\n        window['popup'] = this.popupWindow;\r\n\r\n        if (this.popupWindow && this.popupWindow.focus) {\r\n            this.popupWindow.focus();\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    eventListener(redirectUri: string) {\r\n        return Observable\r\n            .fromEvent<Event>(this.popupWindow, 'loadstart')\r\n            .switchMap((event: Event & { url: string }) => {\r\n                if (!this.popupWindow || this.popupWindow.closed) {\r\n                    return Observable.of('Popup Window Closed');\r\n                }\r\n                if (event.url.indexOf(redirectUri) !== 0) {\r\n                    return Observable.empty();\r\n                }\r\n\r\n                let parser = document.createElement('a');\r\n                parser.href = event.url;\r\n\r\n                if (parser.search || parser.hash) {\r\n                    const queryParams = parser.search.substring(1).replace(/\\/$/, '');\r\n                    const hashParams = parser.hash.substring(1).replace(/\\/$/, '');\r\n                    const hash = PopupService.parseQueryString(hashParams);\r\n                    const qs = PopupService.parseQueryString(queryParams);\r\n                    const allParams = assign({}, qs, hash);\r\n\r\n                    this.popupWindow.close();\r\n\r\n                    if (allParams.error) {\r\n                        throw allParams.error;\r\n                    } else {\r\n                        return Observable.of(allParams);\r\n                    }\r\n                }\r\n                return Observable.empty();\r\n            })\r\n            .take(1)\r\n            .takeWhile((response) => response !== 'Popup Window Closed');\r\n    }\r\n\r\n    pollPopup() {\r\n        return Observable\r\n            .interval(50)\r\n            .switchMap(() => {\r\n                if (!this.popupWindow || this.popupWindow.closed) {\r\n                    return Observable.of('Popup Window Closed');\r\n                }\r\n                let documentOrigin = document.location.host;\r\n                let popupWindowOrigin = '';\r\n                try {\r\n                    popupWindowOrigin = this.popupWindow.location.host;\r\n                } catch (error) {\r\n                    // ignore DOMException: Blocked a frame with origin from accessing a cross-origin frame.\r\n                    //error instanceof DOMException && error.name === 'SecurityError'\r\n                }\r\n                if (popupWindowOrigin === documentOrigin && (this.popupWindow.location.search || this.popupWindow.location.hash)) {\r\n                    const queryParams = this.popupWindow.location.search.substring(1).replace(/\\/$/, '');\r\n                    const hashParams = this.popupWindow.location.hash.substring(1).replace(/[\\/$]/, '');\r\n                    const hash = PopupService.parseQueryString(hashParams);\r\n                    const qs = PopupService.parseQueryString(queryParams);\r\n                    this.popupWindow.close();\r\n                    const allParams = assign({}, qs, hash);\r\n                    if (allParams.error) {\r\n                        throw allParams.error;\r\n                    } else {\r\n                        return Observable.of(allParams);\r\n                    }\r\n                }\r\n                return Observable.empty();\r\n            })\r\n            .take(1)\r\n            .takeWhile((response) => response !== 'Popup Window Closed');\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {PopupService} from './popup.service';\r\nimport {Response} from '@angular/http';\r\nimport {joinUrl, assign} from './utils';\r\nimport {ConfigService, IOauth1Options} from './config.service';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport {JwtHttp} from './jwt-http.service';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n\r\n@Injectable()\r\nexport class Oauth1Service {\r\n    private static base: IOauth1Options = {\r\n        url: null,\r\n        name: null,\r\n        popupOptions: null,\r\n        redirectUri: null,\r\n        authorizationEndpoint: null\r\n    };\r\n    private defaults: IOauth1Options;\r\n    constructor(private http: JwtHttp, private popup: PopupService, private config: ConfigService) {}\r\n    open(options?: IOauth1Options, userData?: any): Observable<Response> {\r\n        this.defaults = assign({}, Oauth1Service.base, options);\r\n        let popupWindow;\r\n        let serverUrl = this.config.baseUrl ? joinUrl(this.config.baseUrl, this.defaults.url) : this.defaults.url;\r\n\r\n        if (!this.config.cordova) {\r\n            popupWindow = this.popup.open('', this.defaults.name, this.defaults.popupOptions/*, this.defaults.redirectUri*/);\r\n        }\r\n\r\n        return this.http.post(serverUrl, JSON.stringify(this.defaults))\r\n            .switchMap((response: Response) => {\r\n                if (this.config.cordova) {\r\n                    popupWindow = this.popup.open(\r\n                        [this.defaults.authorizationEndpoint, this.buildQueryString(response.json())].join('?'),\r\n                        this.defaults.name,\r\n                        this.defaults.popupOptions);\r\n                } else {\r\n                    popupWindow.popupWindow.location =\r\n                        [this.defaults.authorizationEndpoint, this.buildQueryString(response.json())].join('?');\r\n                }\r\n\r\n                return this.config.cordova ? popupWindow.eventListener(this.defaults.redirectUri) : popupWindow.pollPopup();\r\n            })\r\n            .switchMap((response) => {\r\n                let exchangeForToken: any = options.exchangeForToken;\r\n                if (typeof exchangeForToken !== 'function') {\r\n                    exchangeForToken = this.exchangeForToken.bind(this);\r\n                }\r\n                return exchangeForToken(response, userData);\r\n            });\r\n    }\r\n    private exchangeForToken(oauthData, userData?: any) {\r\n        let data = assign({}, this.defaults, oauthData, userData);\r\n        let exchangeForTokenUrl = this.config.baseUrl ? joinUrl(this.config.baseUrl, this.defaults.url) : this.defaults.url;\r\n        return this.http.post(exchangeForTokenUrl, data, { withCredentials: this.config.withCredentials });\r\n    }\r\n    private buildQueryString(obj: Object) {\r\n        return Object.keys(obj).map((key) => {\r\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\r\n        }).join('&');\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {assign, joinUrl, merge, camelCase} from './utils';\r\nimport {ConfigService, IOauth2Options} from './config.service';\r\nimport {PopupService} from './popup.service';\r\nimport {StorageService} from './storage.service';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/observable/of';\r\nimport {JwtHttp} from './jwt-http.service';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n\r\n@Injectable()\r\nexport class Oauth2Service {\r\n    private static base: IOauth2Options = {\r\n        defaultUrlParams: ['response_type', 'client_id', 'redirect_uri'],\r\n        responseType: 'code',\r\n        responseParams: {\r\n            code: 'code',\r\n            clientId: 'clientId',\r\n            redirectUri: 'redirectUri'\r\n        }\r\n    };\r\n\r\n    private defaults: IOauth2Options;\r\n\r\n    constructor(private http: JwtHttp,\r\n                private popup: PopupService,\r\n                private storage: StorageService,\r\n                private config: ConfigService) {\r\n    }\r\n\r\n    open(options: IOauth2Options, userData?: any) {\r\n        this.defaults = merge(options, Oauth2Service.base);\r\n\r\n        let url;\r\n        let openPopup: Observable<any>;\r\n        let stateName = this.defaults.name + '_state';\r\n        let state = this.defaults.state;\r\n        if (typeof state === 'string') {\r\n            this.storage.set(stateName, state);\r\n        } else if (typeof state === 'function') {\r\n            this.storage.set(stateName, state());\r\n        }\r\n\r\n        url = [this.defaults.authorizationEndpoint, this.buildQueryString()].join('?');\r\n\r\n        if (this.config.cordova) {\r\n            openPopup = this.popup\r\n                .open(url, this.defaults.name, this.defaults.popupOptions/*, this.defaults.redirectUri*/)\r\n                .eventListener(this.defaults.redirectUri);\r\n        } else {\r\n            openPopup = this.popup\r\n                .open(url, this.defaults.name, this.defaults.popupOptions/*, this.defaults.redirectUri*/)\r\n                .pollPopup();\r\n        }\r\n\r\n        return openPopup\r\n            .switchMap((oauthData) => {\r\n                // when no server URL provided, return popup params as-is.\r\n                // this is for a scenario when someone wishes to opt out from\r\n                // satellizer's magic by doing authorization code exchange and\r\n                // saving a token manually.\r\n                if (!options.exchangeForToken && (this.defaults.responseType === 'token' || !this.defaults.url)) {\r\n                    return Observable.of(oauthData);\r\n                }\r\n\r\n                if (oauthData.state && oauthData.state !== this.storage.get(stateName)) {\r\n                    throw 'OAuth \"state\" mismatch';\r\n                }\r\n                let exchangeForToken: any = options.exchangeForToken;\r\n                if (typeof exchangeForToken !== 'function') {\r\n                    exchangeForToken = this.exchangeForToken.bind(this);\r\n                }\r\n                return exchangeForToken(oauthData, userData);\r\n            });\r\n    }\r\n\r\n    private exchangeForToken(oauthData: {code?: string, state?: string}, userData?: {}) {\r\n        let data: any = assign({}, this.defaults, oauthData, userData);\r\n\r\n        let exchangeForTokenUrl = this.config.baseUrl ? joinUrl(this.config.baseUrl, this.defaults.url) : this.defaults.url;\r\n\r\n        return this.http.post(exchangeForTokenUrl,  JSON.stringify(data), { withCredentials: this.config.withCredentials });\r\n    }\r\n\r\n    private buildQueryString() {\r\n        let keyValuePairs: string[][] = [];\r\n        let urlParams = ['defaultUrlParams', 'requiredUrlParams', 'optionalUrlParams'];\r\n\r\n        urlParams.forEach((params) => {\r\n            if (this.defaults[params]) {\r\n                (<string[]>this.defaults[params]).forEach((paramName) => {\r\n                    let camelizedName = camelCase(paramName);\r\n                    let paramValue = typeof this.defaults[paramName] === 'function' ?\r\n                        this.defaults[paramName]() :\r\n                        this.defaults[camelizedName];\r\n\r\n                    if (paramName === 'state') {\r\n                        let stateName = this.defaults.name + '_state';\r\n                        paramValue = encodeURIComponent(this.storage.get(stateName));\r\n                    }\r\n\r\n                    if (paramName === 'scope' && Array.isArray(paramValue)) {\r\n                        paramValue = paramValue.join(this.defaults.scopeDelimiter);\r\n\r\n                        if (this.defaults.scopePrefix) {\r\n                            paramValue = [this.defaults.scopePrefix, paramValue].join(this.defaults.scopeDelimiter);\r\n                        }\r\n                    }\r\n\r\n                    keyValuePairs.push([paramName, paramValue]);\r\n                });\r\n            }\r\n        });\r\n\r\n        return keyValuePairs.map(function(pair) {\r\n            return pair.join('=');\r\n        }).join('&');\r\n    }\r\n}\r\n","import {Injectable, Injector} from '@angular/core';\r\nimport {Oauth1Service} from './oauth1.service';\r\nimport {Oauth2Service} from './oauth2.service';\r\nimport {SharedService} from './shared.service';\r\nimport {Response, RequestOptionsArgs} from '@angular/http';\r\nimport {joinUrl} from './utils';\r\nimport {ConfigService, IOauth1Options} from './config.service';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/do';\r\nimport {JwtHttp} from './jwt-http.service';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n@Injectable()\r\nexport class OauthService {\r\n    constructor(private http: JwtHttp,\r\n                private injector: Injector,\r\n                private shared: SharedService,\r\n                private config: ConfigService) {}\r\n    authenticate(name: string, userData?: any): Observable<Response> {\r\n        // var injector = Injector.resolveAndCreate([Oauth1, Oauth2]);\r\n        const provider: { open(options?: IOauth1Options, userData?: any): Observable<Response> } = this.config.providers[name].oauthType === '1.0' ? this.injector.get(Oauth1Service) : this.injector.get(Oauth2Service);\r\n        return provider.open(this.config.providers[name], userData || {})\r\n            .do((response: Response) => {\r\n                // this is for a scenario when someone wishes to opt out from\r\n                // satellizer's magic by doing authorization code exchange and\r\n                // saving a token manually.\r\n                if (this.config.providers[name].url) {\r\n                    this.shared.setToken(response);\r\n                }\r\n            });\r\n    }\r\n    unlink(provider: string, opts: RequestOptionsArgs) {\r\n        opts = opts || {};\r\n        let url = opts.url ? opts.url : joinUrl(this.config.baseUrl, this.config.unlinkUrl);\r\n        opts.body = JSON.stringify({ provider: provider }) || opts.body;\r\n        opts.method = opts.method || 'POST';\r\n        \r\n        return this.http.request(url, opts);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {SharedService} from './shared.service';\r\nimport {ConfigService} from './config.service';\r\nimport {RequestOptionsArgs, Response} from '@angular/http';\r\nimport {joinUrl} from './utils';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/do';\r\nimport {JwtHttp} from './jwt-http.service';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\nfunction getFullOpts(user: string | Object, userOpts?: RequestOptionsArgs) {\r\n    const opts = userOpts || {};\r\n    if (user) {\r\n        opts.body = typeof user === 'string' ? user : JSON.stringify(user);\r\n    }\r\n    opts.method = opts.method || 'POST';\r\n    return opts;\r\n}\r\n\r\n@Injectable()\r\nexport class LocalService {\r\n    constructor(private http: JwtHttp,\r\n                private shared: SharedService,\r\n                private config: ConfigService) {}\r\n\r\n    login(user: string | Object, opts?: RequestOptionsArgs): Observable<Response> {\r\n        const fullOpts = getFullOpts(user, opts);\r\n        const url = fullOpts.url ? fullOpts.url : joinUrl(this.config.baseUrl, this.config.loginUrl);\r\n\r\n        return this.http.request(url, fullOpts)\r\n            .do((response: Response) => this.shared.setToken(response));\r\n    }\r\n\r\n    signup(user: string | Object, opts?: RequestOptionsArgs): Observable<Response> {\r\n        const fullOpts = getFullOpts(user, opts);\r\n        const url = fullOpts.url ? fullOpts.url : joinUrl(this.config.baseUrl, this.config.signupUrl);\r\n\r\n        return this.http.request(url, getFullOpts(user, fullOpts));\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {Response, RequestOptionsArgs} from '@angular/http';\r\nimport {SharedService} from './shared.service';\r\nimport {LocalService} from './local.service';\r\nimport {OauthService} from './oauth.service';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    constructor(private shared: SharedService,\r\n                private local: LocalService,\r\n                private oauth: OauthService) {\r\n    }\r\n\r\n    login(user, opts?: RequestOptionsArgs): Observable<Response> {\r\n        return this.local.login(user, opts);\r\n    }\r\n\r\n    signup(user, opts?: RequestOptionsArgs): Observable<Response> {\r\n        return this.local.signup(user, opts);\r\n    }\r\n\r\n    logout(): Observable<void> {\r\n        return this.shared.logout();\r\n    }\r\n\r\n    authenticate(name: string, userData?: any): Observable<Response> {\r\n        return this.oauth.authenticate(name, userData);\r\n    }\r\n\r\n    link(name: string, userData?: any): Observable<Response> {\r\n        return this.oauth.authenticate(name, userData);\r\n    }\r\n\r\n    unlink(provider: string, opts: RequestOptionsArgs): Observable<Response> {\r\n        return this.oauth.unlink(provider, opts);\r\n    }\r\n\r\n    isAuthenticated(): boolean {\r\n        return this.shared.isAuthenticated();\r\n    }\r\n\r\n    getToken(): string {\r\n        return this.shared.getToken();\r\n    }\r\n\r\n    setToken(token: string | Response): void {\r\n        this.shared.setToken(token);\r\n    }\r\n\r\n    removeToken(): void {\r\n        this.shared.removeToken();\r\n    }\r\n\r\n    getPayload(): any {\r\n        return this.shared.getPayload();\r\n    }\r\n\r\n    setStorageType(type: string): void {\r\n        this.shared.setStorageType(type);\r\n    }\r\n\r\n    getExpirationDate(): Date {\r\n        return this.shared.getExpirationDate();\r\n    }\r\n}\r\n","/**\r\n * Created by Ron on 25/12/2015.\r\n */\r\n\r\nimport {CustomConfig, ConfigService} from './config.service';\r\nimport {SharedService} from './shared.service';\r\nimport {JwtHttp} from './jwt-http.service';\r\nimport {OauthService} from './oauth.service';\r\nimport {PopupService} from './popup.service';\r\nimport {Oauth1Service} from './oauth1.service';\r\nimport {Oauth2Service} from './oauth2.service';\r\nimport {LocalService} from './local.service';\r\nimport {AuthService} from './auth.service';\r\nimport {StorageService} from './storage.service';\r\nimport {ModuleWithProviders, NgModule, Injector} from '@angular/core';\r\nimport {HttpModule, RequestOptions, XHRBackend} from '@angular/http';\r\nimport {Type} from '@angular/core/src/type';\r\nexport {LocalService} from './local.service';\r\nexport {Oauth2Service} from './oauth2.service';\r\nexport {Oauth1Service} from './oauth1.service';\r\nexport {PopupService} from './popup.service';\r\nexport {OauthService} from './oauth.service';\r\nexport {JwtHttp} from './jwt-http.service';\r\nexport {SharedService} from './shared.service';\r\nexport {StorageService} from './storage.service';\r\nexport {AuthService} from './auth.service';\r\nexport {ConfigService, CustomConfig} from './config.service';\r\n\r\n@NgModule({\r\n    imports: [HttpModule]\r\n})\r\nexport class Ng2UiAuthModule {\r\n    static getWithConfig(config: Type<CustomConfig>): ModuleWithProviders {\r\n        return {\r\n            ngModule: Ng2UiAuthModule,\r\n            providers: [\r\n                {provide: CustomConfig, useClass: config },\r\n                {provide: ConfigService, useClass: ConfigService, deps: [CustomConfig] },\r\n                {provide: StorageService, useClass: StorageService, deps: [ConfigService]},\r\n                {provide: SharedService,  useClass: SharedService, deps: [StorageService, ConfigService]},\r\n                {provide: JwtHttp, useClass: JwtHttp, deps: [XHRBackend, RequestOptions, SharedService, ConfigService]},\r\n                {provide: OauthService,  useClass: OauthService, deps: [JwtHttp, Injector, SharedService, ConfigService]} ,\r\n                {provide: PopupService,  useClass: PopupService, deps: [ConfigService]},\r\n                {provide: Oauth1Service,  useClass: Oauth1Service, deps: [JwtHttp, PopupService, ConfigService]} ,\r\n                {provide: Oauth2Service,  useClass: Oauth2Service, deps: [JwtHttp, PopupService, StorageService, ConfigService]} ,\r\n                {provide: LocalService,  useClass: LocalService, deps: [JwtHttp, SharedService, ConfigService]} ,\r\n                {provide: AuthService,  useClass: AuthService, deps: [SharedService, LocalService, OauthService]} ,]\r\n        }\r\n    }\r\n}"],"names":["Injectable","Observable","RequestMethod","Headers","Request","Http","XHRBackend","RequestOptions","Injector","NgModule","HttpModule"],"mappings":"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"}